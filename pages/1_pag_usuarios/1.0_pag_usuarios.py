import streamlit as st
import pandas as pd
from st_aggrid import AgGrid

from manage_db.database import SessionLocal
from manage_db.models import Usuario

st.title('üßëÔ∏è Usu√°rios')
st.markdown("---")


# Cria uma nova sess√£o de banco de dados (boa pr√°tica: criar e fechar em cada uso)
session = SessionLocal()

# Consulta todos os usu√°rios
lista_usuarios = session.query(Usuario).all()

# Fecha a sess√£o
session.close()

# Converte a lista de objetos ORM para uma lista de dicion√°rios (para criar o DataFrame)
dados = [
    {
        "ID": usuario.id,
        "Nome": usuario.nome,
        "Email": usuario.email,
        "Senha": usuario.senha,
        "Ativo": usuario.ativo,
        "Admin": usuario.admin,
    }
    for usuario in lista_usuarios
]

# Cria o DataFrame
df_usuarios = pd.DataFrame(dados)

# ----------------------------------------------------------- bot√µes de a√ß√£o

col1, col2 = st.columns(2)  # üí¨ Divide a linha horizontalmente

# Adicionar
with col1:
    with st.container(border=True):
        # Bot√£o para ir para a p√°gina de cria√ß√£o de novo livro
        st.page_link(
            label="Adicionar novo usu√°rio",
            page="pages/1_pag_usuarios/1.1_pag_usuarios_create.py",
            icon="‚ûï"
        )

# Editar
# Op√ß√£o ao selctbox √© mostrar o READ nao em df mas as linhas em 'objetos soltos'. Assim da pra acoplar um botao.
# Op√ß√£o 2 √© tentar com st.data_editor, se precisar, passar url da doc para gpt ler e ver se √© possivel. Inclusive perguntar: se passar s√≥ a home da doc, vc l√™ tudo?
with col2:
    pass
    with st.container(border=True):
        # Dicion√°rio {t√≠tulo: id} com op√ß√£o em branco no topo
        opcoes = {"": None, **{usuario.nome: usuario.id for usuario in lista_usuarios}}

        # Dropdown de t√≠tulos (inicia em branco)
        usuario_nome_selecionado = st.selectbox(
            "Selecione um usuario para editar:",
            options=list(opcoes.keys())
        )

        # Bot√£o de editar, s√≥ funciona se um livro for selecionado
        if usuario_nome_selecionado and st.button("‚úèÔ∏èÔ∏è Editar Usu√°rio Selecionado"):
            st.session_state.id_usuario_para_editar = opcoes[usuario_nome_selecionado]
            st.switch_page("pages/1_pag_usuarios/1.2_pag_usuarios_update.py")

# --------------------------------------------------------------------------------------- Exibi√ß√£o df
# AgGrid(df_usuarios, height=400, width=150)
st.dataframe(df_usuarios, use_container_width=True, hide_index=True)
# ------------------------------------------------------------------------------------------ Permiss√µes
with st.expander("Permiss√µes"):
    with st.container(border=True):
        st.subheader('N√£o administrador')
        # Para treinar, OK! Mas permiss√£o correta da pag Usu√°rios seria:
        #     Admin - V√™ todos os usu√°rios: Inclui, Edita s√≥ o seu, Exclui.
        #     N√£o Admin - V√™ apenas ao seu pr√≥prio usu√°rio: N√£o Inclui, Edita, N√£o exclui.
        st.write("- No menu principal, n√£o tem acesso √† p√°gina 'Usu√°rios'.")

        st.write("- Na p√°gina 'Editar Livros', n√£o tem acesso √† exclus√£o.")