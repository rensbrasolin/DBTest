import streamlit as st
from manage_db.database import SessionLocal
from manage_db.models import Usuario
from streamlit_authenticator.utilities.hasher import Hasher  # Criptografia da senha

st.title("‚úèÔ∏è Editar Usu√°rio")

# ----------------------------------------------------------- Verifica se ID foi passado via session_state
if "id_usuario_para_editar" not in st.session_state:
    st.warning("Nenhum usuario selecionado para edi√ß√£o.")
    st.stop()

# ----------------------------------------------------------- Conecta ao banco e busca o livro
session = SessionLocal()
usuario_id = st.session_state.id_usuario_para_editar
usuario = session.query(Usuario).get(usuario_id)

if not usuario:
    st.error("Usu√°rio n√£o encontrado.")
    st.stop()

# ----------------------------------------------------------- Formul√°rio com valores preenchidos

with st.form("form_editar_usuario"):
    nome = st.text_input("Nome", value=usuario.nome)
    email = st.text_input("Email", value=usuario.email)
    senha = st.text_input("Senha", type="password", value=usuario.senha)
    ativo = st.checkbox("Ativo?", value=usuario.ativo)
    admin = st.checkbox("Administrador?", value=usuario.admin)

    botao_salvar = st.form_submit_button("Salvar altera√ß√µes")

    if botao_salvar:
        # Criptografia da senha
        senha_criptografada = Hasher.hash(senha)

        usuario.nome = nome
        usuario.email = email
        usuario.senha = senha_criptografada
        usuario.ativo = ativo
        usuario.admin = admin

        session.commit()
        st.success("‚úÖ Usu√°rio atualizado com sucesso!")

# ----------------------------------------------------------- Espa√ßamento visual
st.markdown("---")

# ----------------------------------------------------------- Confirma√ß√£o antes de excluir
st.subheader("Excluir este usu√°rio")

# üí¨ Usa session_state interno para controlar a inten√ß√£o de excluir
if "confirma_exclusao" not in st.session_state:
    st.session_state.confirma_exclusao = False

# Primeiro bot√£o (mostrar inten√ß√£o)
if not st.session_state.confirma_exclusao:
    if st.button("üóëÔ∏è Excluir Usuario"):
        st.session_state.confirma_exclusao = True
        st.warning("‚ö†Ô∏è Essa a√ß√£o √© irrevers√≠vel. Marque a caixa abaixo para confirmar.")

# Exibe checkbox + bot√£o de confirma√ß√£o somente ap√≥s clicar em excluir
if st.session_state.confirma_exclusao:
    confirma = st.checkbox("Sim, desejo excluir este usu√°rio")

    if confirma:
        if st.button("‚ùå Confirmar Exclus√£o", type="primary"):
            session.delete(usuario)
            session.commit()

            # üí¨ Limpa a flag de confirma√ß√£o
            st.session_state.confirma_exclusao = False

            # üí¨ Limpa o ID do livro
            st.session_state.pop("id_usuario_para_editar", None)

            st.success("Usu√°rio exclu√≠do com sucesso! Redirecionando...")

            # Redireciona automaticamente ap√≥s exclus√£o
            st.switch_page("pages/1_pag_usuarios/1.0_pag_usuarios.py")

# ----------------------------------------------------------- Fecha conex√£o com banco
session.close()

# ----------------------------------------------------------- Bot√£o de voltar
st.page_link("pages/1_pag_usuarios/1.0_pag_usuarios.py", label="‚¨ÖÔ∏è Voltar para consulta de usu√°rios", icon="üôã‚Äç‚ôÇ")
